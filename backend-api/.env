# Generate a long, random string for these keys (e.g., using a password manager)
# SECRET_KEY='your-super-secret-flask-key-goes-here'
# JWT_SECRET_KEY='your-different-super-secret-jwt-key-goes-here'

# For local development with SQLite, you can leave this commented out.
# For production with PostgreSQL, it would look like this:
# DATABASE_URL='postgresql://user:password@host:port/dbname'






# Flask Configuration
SECRET_KEY='your-super-secret-flask-key-minimum-32-characters-long'
JWT_SECRET_KEY='your-different-super-secret-jwt-key-minimum-32-characters'
JWT_ACCESS_TOKEN_EXPIRES=86400

# Database Configuration
# For Development (SQLite)
DEV_DATABASE_URL='sqlite:///dev.db'

# For Testing
TEST_DATABASE_URL='sqlite:///test.db'

# For Production (PostgreSQL)
DATABASE_URL='postgresql://username:password@host:port/database_name'

# CORS Configuration (comma-separated)
CORS_ORIGINS='http://localhost:3000,http://localhost:19006,https://your-frontend-domain.com'

# Rate Limiting (Redis URL for production)
REDIS_URL='redis://localhost:6379/0'

# Logging
LOG_LEVEL='INFO'

# File Upload
UPLOAD_FOLDER='uploads'

# External Services
NOMINATIM_USER_AGENT='Asha-AI-HealthPlatform/1.0'

# Environment
FLASK_ENV='development'